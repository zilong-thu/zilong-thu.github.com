---
layout: post
title: "《写给程序员的Web设计书》读书笔记"
date: 2013-11-19 22:09
comments: true
keywords: web design for developers,Web设计,
categories: Reading-Notes
---
<a href="http://book.douban.com/subject/6783748/" name="6783748" class="douban_book" target="_blank">《写给程序员的Web设计书》</a>原作名为“Web Design for Developers: A Programmer's Guide to Design Tools and Techniques”。

下面各标题的编号对应的是书中的章节号。

###2.3 明确目的
> 设计这个网站时，要时刻关注一条：服务于你的目标用户。……在进行Foodbox设计工作的时候，要记住你是在为客户和网站目标用户而设计。这工作不是为你增添炫耀资本的，不要企图用那些刚刚学到的很炫的技术来震撼你的同事。客户和他们的目标用户才是第一位的。

在我看来，按照优先级排序是这样的：网站目的>目标用户>客户或自己的老板>自己想炫耀的技术。
<!-- more -->
###2.5.1 一些约定俗成的布局风格
> 之所以网站之间有这么多相似的地方，是因为开发人员会模仿已经成功的例子。例如，所有的新闻页看起来都差不多，这不是巧合。毕竟，所有的报纸的布局也是相似的。

> 日积月累，用户就会对页面的共性有所期待。一个合格的页面应该做到让用户能够快速找到他想要找到的内容，而不是在页面里茫然四顾或在网站中点来点去。页面需要一个很简单的浏览方式……

所以说，不应该排斥那些约定俗成的东西，不能总想着创新。这也是为什么HTML5直接引入了`<header>`、`<nav>`、`<footer>`这样的语义结构标签了。

###3.5 网络安全色
> 网络安全色调色板只提供了216种颜色，这些颜色在不同的操作系统上都是一样的。这个概念起源于计算机显卡技术不够强大的时代。Mac机上的设计师想确保对于同一张图片，PC机用户也能看到同样的效果。

> 现在设计师已经放弃了这种网络安全色调色板，因为大多数用户的显示器都能显示上百万种颜色了。虽然不同的机器上的色彩显示还是有区别，但是这种区别基本上可以忽略不计了。

一个很不错的配色设计方案网站：http://colorschemedesigner.com/

###4.2 字体类别
####衬线字体（serif font）
典型的是Times New Roman。衬线字体是为印刷而设计的，在电脑屏幕上的表现可不怎么样。衬线字体的主要问题是：太细的笔画使屏幕上显示的字母看不太清，字号越小越严重。不过不能因此而贬低其在印刷领域的地位——印刷的时候，衬线字体是一种可读性很高的字体。
####无衬线字体（sans-serif font）
代表字体有Arial，Helvetica，Verdana。它们适合在屏幕上阅读，所以是网站主要内容的首选字体。甚至在字号很小的时候也很清晰。
####等宽字体（fixed-width font或Monospaced font）
适合显示源代码、发票等对缩进、对齐有一定要求的内容。代表字体是Courier。
####cursive
这些字体试图模仿人的手写体。通常，它们主要由曲线和 Serif 字体中没有的笔划装饰组成。例如，大写 A 再其左腿底部可能有一个小弯，或者完全由花体部分和小的弯曲部分组成。Cursive 字体的例子包括 Zapf Chancery、Author 和 Comic Sans。
####fantasy

关于字体类，<a href="http://www.w3school.com.cn/css/css_font-family.asp" target="_blank">w3school “CSS 字体系列”</a>也讲得很详细，可作为参考。

> 最后，我们大概只能有这样的保证：每个系统上肯定都会有一种衬线字体、一种无衬线字体和一种等宽字体，而系统自己会为每种字体选一个默认的样式。

###4.3.3 字体栈（font stacks）
下面就是一个字体栈：
``` css
body{
	font-family: Helvectica, Arial, sans-serif;
}
```
字体栈的设计关键在于，必须对所选字体有很清晰的了解，它们最好差别不要太大。

有篇英文讲解字体栈：<a href="http://unitinteractive.com/blog/2008/06/26/better-css-font-stacks/" target="_blank">Better CSS Font Stacks</a>

###HTML实体代码
`&nbsp;` 空格，non-breaking blank space

`&copy;` 版权符号 &copy;

`&amp;` &amp;符号

###图片格式
现在明白为什么当年借了师姐的数码单反相机，其照片是RAW格式的了，因为这是一种未经压缩的照片存储格式。而如果相机默认存储为JPEG，则一定是经过压缩了的。

###十六进制颜色码的三位数写法
使用`#f80`来代替`#ff8800`的最大好处就是：减少代码字数，从而减小CSS文件的体积、使得下载更快。除此之外，没有别的好处。

###什么时候可以终止对一种浏览器的支持？
这本书有很多内容与我看过的其他书是重复的，所以一一掠过。不过，这本书时不时出现的“小乔爱问”还是很不错的。就像这个。作者的回答是：

> 我在决定支持哪种浏览器时一直遵守这条准则：支持市场份额最大的两个版本的浏览器，同时保证网站在其他浏览器中可用且刻度。不要求在所有浏览器中看到的网页完全相同，但至少用户可以正常使用网站。

以及

> ……由此我需要指出，不要用IE进行开发，那完全是浪费时间。你要做的是在一个与标准兼容的浏览器中做开发，然后针对其他怪异的浏览器做出修正。

标准，当然指的就是W3C推荐的标准了。

###关于SEO
与其做SEO，不如好好做网站编辑，对页面内容进行高质量加工。

###20.3.5 压缩脚本文件
通过去掉JavaScript、CSS文件里的空格、换行，就足以将文件的尺寸减小不少了。

##总结
这本书从零开始介绍了网站的前端页面是如何搭建的：从与客户交流，绘制草图，用Photoshop制作页面切图，切图转化为HTML、CSS代码，色彩方案的选择，以及到搜索引擎优化、前端性能优化，很完整的步骤。适合那些选修了《计算机网页设计基础》这类课程的新人去读。不太适合老手认认真真地读，但其提供的一些资源挺不错。

评价：对于新手★★★★☆，对于学习了半年以上的人★★★☆☆